{
	"Load environment variables": {
		"prefix": "loadenvvariables",
		"body": [
			"try:",
			"\taws_profile = os.environ['AWS_PROFILE']\n\t",
			"except KeyError as e:",
			"\tprint('Environment variable not loaded: {}'.format(e))"
		]
	},
	"Arguments": {
		"prefix": "argparse",
		"body": [
			"parser = argparse.ArgumentParser()",
			"parser.add_argument('--thing', help='Help text', type=str, required=True)",
			"parser.add_argument('--thing2', help='Help text', action='store_true', required=False)",
			"parser.add_argument('--environment', help='Help text', type=str, default=None, required=True, choices=['uat', 'UAT', 'prod', 'Prod', 'production', 'Production'])",
			"args = parser.parse_args()"
		]
	},
	"boto-S3-PUT-object": {
		"prefix": "botos3put",
		"body": [
			"new_body_decoded = json.dumps($1)",
			"new_body_encoded = new_body_decoded.encode('utf-8')\n",
			"response = client.put_object(",
			"\tBucket=$2,",
			"\tKey=$3,",
			"\tBody=new_body_encoded",
			")\n",
			"response_status_code = response['ResponseMetadata']['HTTPStatusCode']"
		]
	},
	"boto-s3-GET-object": {
		"prefix": "botos3get",
		"body": [
			"response = client.get_object(",
			"\tBucket=$1,",
			"\tKey=$2",
			")\n",
			"response_status_code = response['ResponseMetadata']['HTTPStatusCode']\n",
			"body_decoded = response['Body'].read().decode('utf-8')",
			"body_decoded_json = json.loads(body_decoded)"
		]
	},
	"boto-s3-list-objects": {
		"prefix": "botos3list",
		"body": [
			"response = client.list_objects_v2(",
			"\tBucket=$1",
			")\n",
			"for item in response['Contents']:",
			"\tkey = item['Key']"
		]
	},
	"boto-s3-delete-objects": {
		"prefix": "botos3delete",
		"body": [
			"response = client.delete_objects(",
			"\tBucket=$1",
			"\tDelete={",
			"\t\t'Objects': [",
			"\t\t\t{",
			"\t\t\t\t'Key': $2",
			"\t\t\t},",
			"\t\t]",
			"\t}",
			")"
		]
	},
	"generate-random-uuid": {
		"prefix": "uuid",
		"body": [
			"uuid_str = uuid.uuid4()",
			"print(str(uuid_str))"
		]
	},
	"Check CLI output": {
		"prefix": "checkoutput",
		"body": [
				"cli = [",
				"\t'whoami',",
				"]\n",
				"try:",
				"\tcheck_output(cli)\n",
				"except Exception as e:",
				"\traise Exception(e)"
		],
		"description": "Check output of a CLI command"
	}
}
